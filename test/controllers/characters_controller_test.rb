require 'test_helper'

class CharactersControllerTest < ActionDispatch::IntegrationTest
  setup do
    @character = characters(:one)
  end

  test "should get index" do
    get characters_url
    assert_response :success
  end

  test "should get new" do
    get new_character_url
    assert_response :success
  end

  test "should create character" do
    assert_difference('Character.count') do
      post characters_url, params: { character: { age: @character.age, animal_empathy: @character.animal_empathy, appraise: @character.appraise, background: @character.background, balance: @character.balance, base_attack: @character.base_attack, bluff: @character.bluff, cha: @character.cha, char_name: @character.char_name, class: @character.class, class_2: @character.class_2, class_3: @character.class_3, class_4: @character.class_4, class_5: @character.class_5, climb: @character.climb, craft_1: @character.craft_1, craft_1_focus: @character.craft_1_focus, craft_2: @character.craft_2, craft_2_focus: @character.craft_2_focus, craft_3: @character.craft_3, craft_3_focus: @character.craft_3_focus, decipher_script: @character.decipher_script, defense: @character.defense, dex: @character.dex, diplomacy: @character.diplomacy, disable_device: @character.disable_device, disguise: @character.disguise, escape_artist: @character.escape_artist, eyes: @character.eyes, forgery: @character.forgery, fortitude: @character.fortitude, gather_information: @character.gather_information, gender: @character.gender, hair: @character.hair, handle_animal: @character.handle_animal, heal: @character.heal, heavy_load: @character.heavy_load, hide: @character.hide, hp_current: @character.hp_current, hp_max: @character.hp_max, initiative: @character.initiative, innuendo: @character.innuendo, int: @character.int, intuit_direction: @character.intuit_direction, jump: @character.jump, knowledge_age: @character.knowledge_age, knowledge_arcana: @character.knowledge_arcana, knowledge_architecture: @character.knowledge_architecture, knowledge_blight: @character.knowledge_blight, knowledge_custom_1: @character.knowledge_custom_1, knowledge_custom_1_focus: @character.knowledge_custom_1_focus, knowledge_custom_2: @character.knowledge_custom_2, knowledge_custom_2_focus: @character.knowledge_custom_2_focus, knowledge_custom_3: @character.knowledge_custom_3, knowledge_custom_3_focus: @character.knowledge_custom_3_focus, knowledge_geography: @character.knowledge_geography, knowledge_history: @character.knowledge_history, knowledge_local: @character.knowledge_local, knowledge_nature: @character.knowledge_nature, knowledge_nobility: @character.knowledge_nobility, language_1: @character.language_1, language_2: @character.language_2, language_3: @character.language_3, language_4: @character.language_4, language_5: @character.language_5, level: @character.level, light_load: @character.light_load, listen: @character.listen, max_load: @character.max_load, medium_load: @character.medium_load, melee_attack: @character.melee_attack, money_cp: @character.money_cp, money_gc: @character.money_gc, money_mk: @character.money_mk, money_sp: @character.money_sp, move_silently: @character.move_silently, open_lock: @character.open_lock, perform_1: @character.perform_1, perform_1_focus: @character.perform_1_focus, perform_2: @character.perform_2, perform_2_focus: @character.perform_2_focus, perform_3: @character.perform_3, perform_3_focus: @character.perform_3_focus, perform_4: @character.perform_4, perform_4_focus: @character.perform_4_focus, perform_5: @character.perform_5, perform_5_focus: @character.perform_5_focus, perform_6: @character.perform_6, perform_6_focus: @character.perform_6_focus, pick_pocket: @character.pick_pocket, player_name: @character.player_name, profession_1: @character.profession_1, profession_1_focus: @character.profession_1_focus, profession_2: @character.profession_2, profession_2_focus: @character.profession_2_focus, profession_3: @character.profession_3, profession_3_focus: @character.profession_3_focus, ranged_attack: @character.ranged_attack, read_lips: @character.read_lips, reflex: @character.reflex, ride_1: @character.ride_1, ride_1_focus: @character.ride_1_focus, ride_2: @character.ride_2, ride_2_focus: @character.ride_2_focus, ride_3: @character.ride_3, ride_3_focus: @character.ride_3_focus, search: @character.search, sense_motive: @character.sense_motive, size: @character.size, skin: @character.skin, speed: @character.speed, spot: @character.spot, str: @character.str, swim: @character.swim, tumble: @character.tumble, use_rope: @character.use_rope, weave_bonus_0: @character.weave_bonus_0, weave_bonus_1: @character.weave_bonus_1, weave_bonus_2: @character.weave_bonus_2, weave_bonus_3: @character.weave_bonus_3, weave_bonus_4: @character.weave_bonus_4, weave_bonus_5: @character.weave_bonus_5, weave_bonus_6: @character.weave_bonus_6, weave_bonus_7: @character.weave_bonus_7, weave_bonus_8: @character.weave_bonus_8, weave_bonus_9: @character.weave_bonus_9, weave_perday_0: @character.weave_perday_0, weave_perday_1: @character.weave_perday_1, weave_perday_2: @character.weave_perday_2, weave_perday_3: @character.weave_perday_3, weave_perday_4: @character.weave_perday_4, weave_perday_5: @character.weave_perday_5, weave_perday_6: @character.weave_perday_6, weave_perday_7: @character.weave_perday_7, weave_perday_8: @character.weave_perday_8, weave_perday_9: @character.weave_perday_9, weave_save_mod: @character.weave_save_mod, weavesight: @character.weavesight, weight: @character.weight, wilderness_lore: @character.wilderness_lore, will: @character.will, wis: @character.wis } }
    end

    assert_redirected_to character_url(Character.last)
  end

  test "should show character" do
    get character_url(@character)
    assert_response :success
  end

  test "should get edit" do
    get edit_character_url(@character)
    assert_response :success
  end

  test "should update character" do
    patch character_url(@character), params: { character: { age: @character.age, animal_empathy: @character.animal_empathy, appraise: @character.appraise, background: @character.background, balance: @character.balance, base_attack: @character.base_attack, bluff: @character.bluff, cha: @character.cha, char_name: @character.char_name, class: @character.class, class_2: @character.class_2, class_3: @character.class_3, class_4: @character.class_4, class_5: @character.class_5, climb: @character.climb, craft_1: @character.craft_1, craft_1_focus: @character.craft_1_focus, craft_2: @character.craft_2, craft_2_focus: @character.craft_2_focus, craft_3: @character.craft_3, craft_3_focus: @character.craft_3_focus, decipher_script: @character.decipher_script, defense: @character.defense, dex: @character.dex, diplomacy: @character.diplomacy, disable_device: @character.disable_device, disguise: @character.disguise, escape_artist: @character.escape_artist, eyes: @character.eyes, forgery: @character.forgery, fortitude: @character.fortitude, gather_information: @character.gather_information, gender: @character.gender, hair: @character.hair, handle_animal: @character.handle_animal, heal: @character.heal, heavy_load: @character.heavy_load, hide: @character.hide, hp_current: @character.hp_current, hp_max: @character.hp_max, initiative: @character.initiative, innuendo: @character.innuendo, int: @character.int, intuit_direction: @character.intuit_direction, jump: @character.jump, knowledge_age: @character.knowledge_age, knowledge_arcana: @character.knowledge_arcana, knowledge_architecture: @character.knowledge_architecture, knowledge_blight: @character.knowledge_blight, knowledge_custom_1: @character.knowledge_custom_1, knowledge_custom_1_focus: @character.knowledge_custom_1_focus, knowledge_custom_2: @character.knowledge_custom_2, knowledge_custom_2_focus: @character.knowledge_custom_2_focus, knowledge_custom_3: @character.knowledge_custom_3, knowledge_custom_3_focus: @character.knowledge_custom_3_focus, knowledge_geography: @character.knowledge_geography, knowledge_history: @character.knowledge_history, knowledge_local: @character.knowledge_local, knowledge_nature: @character.knowledge_nature, knowledge_nobility: @character.knowledge_nobility, language_1: @character.language_1, language_2: @character.language_2, language_3: @character.language_3, language_4: @character.language_4, language_5: @character.language_5, level: @character.level, light_load: @character.light_load, listen: @character.listen, max_load: @character.max_load, medium_load: @character.medium_load, melee_attack: @character.melee_attack, money_cp: @character.money_cp, money_gc: @character.money_gc, money_mk: @character.money_mk, money_sp: @character.money_sp, move_silently: @character.move_silently, open_lock: @character.open_lock, perform_1: @character.perform_1, perform_1_focus: @character.perform_1_focus, perform_2: @character.perform_2, perform_2_focus: @character.perform_2_focus, perform_3: @character.perform_3, perform_3_focus: @character.perform_3_focus, perform_4: @character.perform_4, perform_4_focus: @character.perform_4_focus, perform_5: @character.perform_5, perform_5_focus: @character.perform_5_focus, perform_6: @character.perform_6, perform_6_focus: @character.perform_6_focus, pick_pocket: @character.pick_pocket, player_name: @character.player_name, profession_1: @character.profession_1, profession_1_focus: @character.profession_1_focus, profession_2: @character.profession_2, profession_2_focus: @character.profession_2_focus, profession_3: @character.profession_3, profession_3_focus: @character.profession_3_focus, ranged_attack: @character.ranged_attack, read_lips: @character.read_lips, reflex: @character.reflex, ride_1: @character.ride_1, ride_1_focus: @character.ride_1_focus, ride_2: @character.ride_2, ride_2_focus: @character.ride_2_focus, ride_3: @character.ride_3, ride_3_focus: @character.ride_3_focus, search: @character.search, sense_motive: @character.sense_motive, size: @character.size, skin: @character.skin, speed: @character.speed, spot: @character.spot, str: @character.str, swim: @character.swim, tumble: @character.tumble, use_rope: @character.use_rope, weave_bonus_0: @character.weave_bonus_0, weave_bonus_1: @character.weave_bonus_1, weave_bonus_2: @character.weave_bonus_2, weave_bonus_3: @character.weave_bonus_3, weave_bonus_4: @character.weave_bonus_4, weave_bonus_5: @character.weave_bonus_5, weave_bonus_6: @character.weave_bonus_6, weave_bonus_7: @character.weave_bonus_7, weave_bonus_8: @character.weave_bonus_8, weave_bonus_9: @character.weave_bonus_9, weave_perday_0: @character.weave_perday_0, weave_perday_1: @character.weave_perday_1, weave_perday_2: @character.weave_perday_2, weave_perday_3: @character.weave_perday_3, weave_perday_4: @character.weave_perday_4, weave_perday_5: @character.weave_perday_5, weave_perday_6: @character.weave_perday_6, weave_perday_7: @character.weave_perday_7, weave_perday_8: @character.weave_perday_8, weave_perday_9: @character.weave_perday_9, weave_save_mod: @character.weave_save_mod, weavesight: @character.weavesight, weight: @character.weight, wilderness_lore: @character.wilderness_lore, will: @character.will, wis: @character.wis } }
    assert_redirected_to character_url(@character)
  end

  test "should destroy character" do
    assert_difference('Character.count', -1) do
      delete character_url(@character)
    end

    assert_redirected_to characters_url
  end
end
